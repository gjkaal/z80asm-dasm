<#@ template debug="false" hostspecific="true" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.IO" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ include file="_Utils.t4"#>
<#@ output extension=".cs" #>
<#AutoGeneratedCodeWarning();#>


namespace Konamiman.Z80dotNet
{
    public partial class Z80InstructionExecutor
    {
<#  foreach(var reg in new[] {"AF","BC","DE","HL","IX","IY"}) { 
    foreach(var isPush in new[] {true, false}) { #>
        /// <summary>
        /// The <#=isPush ? "PUSH" : "POP"#> <#=reg#> instruction.
        /// </summary>
        private byte <#=isPush ? "PUSH" : "POP"#>_<#=reg#>()
        {
            FetchFinished();

<# if(isPush)
	   PushToStack(reg);
   else
	   PopFromStack(reg); #>

            return <#=(isPush ? 11 :10) + (reg.StartsWith("I") ? 4 : 0)#>;
        }

<# }} #>
    }
}