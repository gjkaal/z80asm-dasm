<#@ template debug="false" hostspecific="true" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.IO" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ include file="_Utils.t4"#>
<#@ output extension=".cs" #>
<#AutoGeneratedCodeWarning();#>

using System;

namespace Konamiman.Z80dotNet
{
    public partial class Z80InstructionExecutor
    {
<# foreach (var reg in new[] {"(HL)", "(IX+n)", "(IY+n)"}) {
        var isMemHL = (reg == "(HL)");
        var instrName = String.Format("LD {0},n", reg);
        var methodName = String.Format("LD_{0}_N", MethodRegPartName(reg)); #>
        /// <summary>
        /// The <#=instrName#> instruction.
        /// </summary>
        private byte <#=methodName#>()
        {
<# ReadOffset(reg); #>
            var newValue = ProcessorAgent.FetchNextOpcode();
            FetchFinished();

<# GetAddressFromReg(reg);
SetNewValueToRegOrMem(reg); #>

            return <#=isMemHL ? 10 : 19 #>;
        }

<# } #>
    }
}
